{"ast":null,"code":"var _jsxFileName = \"/home/noelia/react/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport AlertTable from \"./components/AlertTable\";\nimport Graphs from \"./components/Graphs\";\nimport Filters from \"./components/Filters\";\nimport { fetchAlerts } from \"./services/api\";\nimport 'leaflet/dist/leaflet.css';\nimport MapComponent from \"./components/GaliciaMap\";\nimport \"./styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [filters, setFilters] = useState({\n    estado: \"Activas\",\n    tipo: \"Todos\",\n    ubicacion: \"Todas\",\n    mes: new Date().toLocaleString(\"en-US\", {\n      month: \"short\"\n    }) // ✅ Guardamos el mes en formato \"Jan\"\n  });\n  const [alerts, setAlerts] = useState([]); // Datos filtrados\n  const [alertsSinFiltrar, setAlertsSinFiltrar] = useState([]); // Todos los datos\n\n  useEffect(() => {\n    console.log(\"🎯 Filtros actuales:\", filters);\n    fetchAlerts(filters.estado).then(data => {\n      console.log(\"🔍 Datos obtenidos de fetchAlerts:\", data);\n      if (!data || data.length === 0) {\n        console.warn(\"⚠️ La API no está devolviendo datos.\");\n      }\n      setAlertsSinFiltrar(data);\n    });\n  }, [filters.estado]); // 🔥 Solo recargar cuando cambie el estado de la alerta\n\n  console.log(\"📅 Fechas en alertsSinFiltrar:\", alertsSinFiltrar.map(alert => alert.Fecha_hora));\n  useEffect(() => {\n    console.log(\"🔎 Aplicando filtros...\", filters);\n    const filteredData = alertsSinFiltrar.filter(alert => (filters.tipo === \"Todos\" || alert.Tipo === filters.tipo) && (filters.ubicacion === \"Todas\" || alert.Ubicación === filters.ubicacion) && new Date(alert.Fecha_hora).toLocaleString(\"en-US\", {\n      month: \"short\"\n    }) === filters.mes);\n    console.log(\"✅ Datos filtrados:\", filteredData);\n    setAlerts(filteredData);\n  }, [filters, alertsSinFiltrar]); // 🔥 Se ejecuta cuando cambia `filters` o `alertsSinFiltrar`\n\n  // ✅ Función para actualizar los filtros globalmente\n  const handleFilterChange = newFilters => {\n    console.log(\"🔄 Actualizando filtros...\", newFilters);\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      ...newFilters\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AlertTable, {\n      alerts: alerts,\n      setAlerts: setAlerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Graphs, {\n      alertData: alerts,\n      fullAlertData: alertsSinFiltrar,\n      filteredMonth: filters.mes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mapa de Alertas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      fullAlertData: alertsSinFiltrar,\n      selectedLocation: filters.ubicacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Nu1haoCzGApxavLJ+u08wdzw1hk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","AlertTable","Graphs","Filters","fetchAlerts","MapComponent","jsxDEV","_jsxDEV","App","_s","filters","setFilters","estado","tipo","ubicacion","mes","Date","toLocaleString","month","alerts","setAlerts","alertsSinFiltrar","setAlertsSinFiltrar","console","log","then","data","length","warn","map","alert","Fecha_hora","filteredData","filter","Tipo","Ubicación","handleFilterChange","newFilters","prevFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","alertData","fullAlertData","filteredMonth","selectedLocation","_c","$RefreshReg$"],"sources":["/home/noelia/react/web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport AlertTable from \"./components/AlertTable\";\nimport Graphs from \"./components/Graphs\";\nimport Filters from \"./components/Filters\";\nimport { fetchAlerts } from \"./services/api\"; \nimport 'leaflet/dist/leaflet.css';\nimport MapComponent from \"./components/GaliciaMap\";\nimport \"./styles/main.css\";\n\nconst App = () => {\n    const [filters, setFilters] = useState({ \n        estado: \"Activas\", \n        tipo: \"Todos\", \n        ubicacion: \"Todas\", \n        mes: new Date().toLocaleString(\"en-US\", { month: \"short\" }) // ✅ Guardamos el mes en formato \"Jan\"\n    });\n\n    const [alerts, setAlerts] = useState([]); // Datos filtrados\n    const [alertsSinFiltrar, setAlertsSinFiltrar] = useState([]); // Todos los datos\n\n    useEffect(() => {\n        console.log(\"🎯 Filtros actuales:\", filters);\n        \n        fetchAlerts(filters.estado).then((data) => {\n            console.log(\"🔍 Datos obtenidos de fetchAlerts:\", data);\n            if (!data || data.length === 0) {\n            console.warn(\"⚠️ La API no está devolviendo datos.\");\n            }\n            setAlertsSinFiltrar(data);\n        });\n    }, [filters.estado]); // 🔥 Solo recargar cuando cambie el estado de la alerta\n\n    console.log(\"📅 Fechas en alertsSinFiltrar:\", alertsSinFiltrar.map(alert => alert.Fecha_hora));\n\n    useEffect(() => {\n        console.log(\"🔎 Aplicando filtros...\", filters);\n        \n        const filteredData = alertsSinFiltrar.filter(alert => \n            (filters.tipo === \"Todos\" || alert.Tipo === filters.tipo) &&\n            (filters.ubicacion === \"Todas\" || alert.Ubicación === filters.ubicacion) &&\n            (new Date(alert.Fecha_hora).toLocaleString(\"en-US\", { month: \"short\" }) === filters.mes)\n        );\n\n        console.log(\"✅ Datos filtrados:\", filteredData);\n        setAlerts(filteredData);\n    }, [filters, alertsSinFiltrar]); // 🔥 Se ejecuta cuando cambia `filters` o `alertsSinFiltrar`\n\n    // ✅ Función para actualizar los filtros globalmente\n    const handleFilterChange = (newFilters) => {\n        console.log(\"🔄 Actualizando filtros...\", newFilters);\n        setFilters(prevFilters => ({ ...prevFilters, ...newFilters }));\n    };\n\n    return (\n        <div className=\"container\">\n            <Header />\n            \n            {/* 🔹 Filtros ahora están separados y afectan AlertTable y Graphs */}\n            <Filters onFilterChange={handleFilterChange} />\n\n            <AlertTable alerts={alerts} setAlerts={setAlerts} />\n            <Graphs alertData={alerts} fullAlertData={alertsSinFiltrar} filteredMonth={filters.mes} />\n\n            <h2>Mapa de Alertas</h2>\n<MapComponent fullAlertData={alertsSinFiltrar} selectedLocation={filters.ubicacion} />\n        </div>\n    );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}