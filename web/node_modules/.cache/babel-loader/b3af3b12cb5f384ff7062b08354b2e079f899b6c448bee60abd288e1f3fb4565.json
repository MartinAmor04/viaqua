{"ast":null,"code":"const API_URL = \"http://127.0.0.1:5000/api\";\nexport async function fetchAlerts(estado = \"Activas\") {\n  try {\n    const response = await fetch(`${API_URL}/alerts?estado=${estado}`);\n    const data = await response.json();\n    console.log(\"Datos de la API en fetchAlerts:\", data); // Verifica si la API devuelve datos\n\n    return data;\n  } catch (error) {\n    console.error(\"❌ Error al obtener alertas:\", error);\n    return [];\n  }\n}\nexport async function editAlert(id, alertType, estado) {\n  try {\n    const response = await fetch(`${API_URL}/edit-alert`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id,\n        alert_type: alertType,\n        estado\n      })\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(\"❌ Error al editar alerta:\", error);\n    return {\n      success: false\n    };\n  }\n}","map":{"version":3,"names":["API_URL","fetchAlerts","estado","response","fetch","data","json","console","log","error","editAlert","id","alertType","method","headers","body","JSON","stringify","alert_type","success"],"sources":["/home/noelia/viaqua/web/src/services/api.js"],"sourcesContent":["const API_URL = \"http://127.0.0.1:5000/api\";\n\nexport async function fetchAlerts(estado = \"Activas\") {\n    try {\n        const response = await fetch(`${API_URL}/alerts?estado=${estado}`);\n        const data = await response.json();\n\n        console.log(\"Datos de la API en fetchAlerts:\", data); // Verifica si la API devuelve datos\n\n        return data;\n    } catch (error) {\n        console.error(\"❌ Error al obtener alertas:\", error);\n        return [];\n    }\n}\n\n\nexport async function editAlert(id, alertType, estado) {\n    try {\n        const response = await fetch(`${API_URL}/edit-alert`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ id, alert_type: alertType, estado }),\n        });\n        return await response.json();\n    } catch (error) {\n        console.error(\"❌ Error al editar alerta:\", error);\n        return { success: false };\n    }\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,eAAeC,WAAWA,CAACC,MAAM,GAAG,SAAS,EAAE;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,kBAAkBE,MAAM,EAAE,CAAC;IAClE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,IAAI,CAAC,CAAC,CAAC;;IAEtD,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,EAAE;EACb;AACJ;AAGA,OAAO,eAAeC,SAASA,CAACC,EAAE,EAAEC,SAAS,EAAEV,MAAM,EAAE;EACnD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,aAAa,EAAE;MAClDa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,EAAE;QAAEO,UAAU,EAAEN,SAAS;QAAEV;MAAO,CAAC;IAC9D,CAAC,CAAC;IACF,OAAO,MAAMC,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO;MAAEU,OAAO,EAAE;IAAM,CAAC;EAC7B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}