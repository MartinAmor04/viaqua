{"ast":null,"code":"var _jsxFileName = \"/home/noelia/react/web/src/components/Graphs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale, ArcElement, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend } from \"chart.js\";\nimport \"../styles/Graphs.css\";\n\n// Registrar elementos necesarios para Chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, ArcElement, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\nfunction Graphs({\n  alertData,\n  fullAlertData,\n  filteredMonth\n}) {\n  _s();\n  const pieChartRef = useRef(null);\n  const barChartRef = useRef(null);\n  const lineChartRef = useRef(null);\n  useEffect(() => {\n    if (!alertData.length || !fullAlertData.length) {\n      console.warn(\"⚠️ No hay datos suficientes para mostrar gráficos.\");\n      return;\n    }\n\n    // 🔹 Filtrar datos antes de pasarlos a los gráficos\n    const filteredAlerts = fullAlertData.filter(alert => {\n      const alertDate = new Date(alert.Fecha_hora);\n      if (isNaN(alertDate.getTime())) return false;\n      return alertDate.toLocaleString(\"en-US\", {\n        month: \"short\"\n      }) === filteredMonth;\n    });\n    console.log(\"✅ Alertas filtradas para gráficos:\", filteredAlerts);\n\n    // 🔹 Inicializar `alertsByMonth`\n    const monthsOfYear = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const alertsByMonth = monthsOfYear.reduce((acc, month) => ({\n      ...acc,\n      [month]: 0\n    }), {});\n    filteredAlerts.forEach(alert => {\n      const month = new Date(alert.Fecha_hora).toLocaleString(\"en-US\", {\n        month: \"short\"\n      });\n      if (alertsByMonth.hasOwnProperty(month)) {\n        alertsByMonth[month]++;\n      }\n    });\n    console.log(\"📅 Estructura filtrada de alertsByMonth:\", alertsByMonth);\n    const labelsBar = monthsOfYear;\n    const valuesBar = monthsOfYear.map(month => alertsByMonth[month]);\n\n    // 🔹 Destacar el mes filtrado en el gráfico de barras\n    const backgroundColors = labelsBar.map(month => month === filteredMonth ? \"rgba(254, 107, 19, 0.8)\" : \"rgba(3, 39, 64, 0.8)\");\n\n    // 🔹 Destruir gráficos anteriores antes de renderizar nuevos\n    [pieChartRef, barChartRef, lineChartRef].forEach(ref => {\n      var _ref$current;\n      if ((_ref$current = ref.current) !== null && _ref$current !== void 0 && _ref$current.chart) ref.current.chart.destroy();\n    });\n\n    // 🔹 Gráfico de pastel - Tipos de avería\n    pieChartRef.current.chart = new Chart(pieChartRef.current.getContext(\"2d\"), {\n      type: \"pie\",\n      data: {\n        labels: Object.keys(alertData.reduce((acc, alert) => {\n          acc[alert.Tipo_avería || \"Desconocido\"] = (acc[alert.Tipo_avería || \"Desconocido\"] || 0) + 1;\n          return acc;\n        }, {})),\n        datasets: [{\n          label: \"Tipos de Avería\",\n          data: Object.values(alertData.reduce((acc, alert) => {\n            acc[alert.Tipo_avería || \"Desconocido\"] = (acc[alert.Tipo_avería || \"Desconocido\"] || 0) + 1;\n            return acc;\n          }, {})),\n          backgroundColor: [\"#fe6b13\", \"#5da3ea\", \"#FFCE56\", \"#4CAF50\", \"#8E44AD\"]\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: \"Distribución de Tipos de Avería\"\n          }\n        }\n      }\n    });\n\n    // 🔹 Gráfico de barras - Averías por mes\n    barChartRef.current.chart = new Chart(barChartRef.current.getContext(\"2d\"), {\n      type: \"bar\",\n      data: {\n        labels: labelsBar,\n        datasets: [{\n          label: \"Averías por Mes\",\n          data: valuesBar,\n          backgroundColor: backgroundColors,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          title: {\n            display: true,\n            text: \"Averías por Mes\"\n          }\n        }\n      }\n    });\n\n    // 🔹 Gráfico de líneas - Histórico por máquina\n    lineChartRef.current.chart = new Chart(lineChartRef.current.getContext(\"2d\"), {\n      type: \"line\",\n      data: {\n        labels: Object.keys(alertData.reduce((acc, alert) => {\n          acc[alert.Máquina || \"Sin nombre\"] = (acc[alert.Máquina || \"Sin nombre\"] || []).concat(new Date(alert.Fecha_hora).toLocaleDateString());\n          return acc;\n        }, {})),\n        datasets: Object.keys(alertData.reduce((acc, alert) => {\n          acc[alert.Máquina || \"Sin nombre\"] = (acc[alert.Máquina || \"Sin nombre\"] || []).concat(new Date(alert.Fecha_hora).toLocaleDateString());\n          return acc;\n        }, {})).map(machine => ({\n          label: machine,\n          data: alertData.reduce((acc, alert) => {\n            acc[alert.Máquina || \"Sin nombre\"] = (acc[alert.Máquina || \"Sin nombre\"] || []).length;\n            return acc;\n          }, {})[machine],\n          borderColor: \"#032740\",\n          tension: 0.1\n        }))\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          },\n          title: {\n            display: true,\n            text: \"Histórico de Averías por Máquina\"\n          }\n        }\n      }\n    });\n  }, [alertData, fullAlertData, filteredMonth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"40px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"graph-title\",\n        children: \"Estad\\xEDsticas de Alertas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-card\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: pieChartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-card\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: barChartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-card full-width\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: lineChartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Graphs, \"B9xEgb7g3r5cf/eE04aH1PZPADY=\");\n_c = Graphs;\nexport default Graphs;\nvar _c;\n$RefreshReg$(_c, \"Graphs\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","CategoryScale","ArcElement","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Graphs","alertData","fullAlertData","filteredMonth","_s","pieChartRef","barChartRef","lineChartRef","length","console","warn","filteredAlerts","filter","alert","alertDate","Date","Fecha_hora","isNaN","getTime","toLocaleString","month","log","monthsOfYear","alertsByMonth","reduce","acc","forEach","hasOwnProperty","labelsBar","valuesBar","map","backgroundColors","ref","_ref$current","current","chart","destroy","getContext","type","data","labels","Object","keys","Tipo_avería","datasets","label","values","backgroundColor","options","responsive","plugins","title","display","text","borderWidth","scales","y","beginAtZero","legend","position","Máquina","concat","toLocaleDateString","machine","borderColor","tension","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/noelia/react/web/src/components/Graphs.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale, ArcElement, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend } from \"chart.js\";\nimport \"../styles/Graphs.css\";\n\n// Registrar elementos necesarios para Chart.js\nChart.register(CategoryScale, ArcElement, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\n\nfunction Graphs({ alertData, fullAlertData, filteredMonth }) {\n  const pieChartRef = useRef(null);\n  const barChartRef = useRef(null);\n  const lineChartRef = useRef(null);\n\n  useEffect(() => {\n    if (!alertData.length || !fullAlertData.length) {\n        console.warn(\"⚠️ No hay datos suficientes para mostrar gráficos.\");\n        return;\n    }\n\n    // 🔹 Filtrar datos antes de pasarlos a los gráficos\n    const filteredAlerts = fullAlertData.filter(alert => {\n        const alertDate = new Date(alert.Fecha_hora);\n        if (isNaN(alertDate.getTime())) return false;\n        return alertDate.toLocaleString(\"en-US\", { month: \"short\" }) === filteredMonth;\n    });\n\n    console.log(\"✅ Alertas filtradas para gráficos:\", filteredAlerts);\n\n    // 🔹 Inicializar `alertsByMonth`\n    const monthsOfYear = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const alertsByMonth = monthsOfYear.reduce((acc, month) => ({ ...acc, [month]: 0 }), {});\n\n    filteredAlerts.forEach(alert => {\n        const month = new Date(alert.Fecha_hora).toLocaleString(\"en-US\", { month: \"short\" });\n        if (alertsByMonth.hasOwnProperty(month)) {\n            alertsByMonth[month]++;\n        }\n    });\n\n    console.log(\"📅 Estructura filtrada de alertsByMonth:\", alertsByMonth);\n\n    const labelsBar = monthsOfYear;\n    const valuesBar = monthsOfYear.map(month => alertsByMonth[month]);\n\n    // 🔹 Destacar el mes filtrado en el gráfico de barras\n    const backgroundColors = labelsBar.map(month =>\n      month === filteredMonth ? \"rgba(254, 107, 19, 0.8)\" : \"rgba(3, 39, 64, 0.8)\"\n    );\n\n    // 🔹 Destruir gráficos anteriores antes de renderizar nuevos\n    [pieChartRef, barChartRef, lineChartRef].forEach(ref => {\n      if (ref.current?.chart) ref.current.chart.destroy();\n    });\n\n    // 🔹 Gráfico de pastel - Tipos de avería\n    pieChartRef.current.chart = new Chart(pieChartRef.current.getContext(\"2d\"), {\n      type: \"pie\",\n      data: {\n        labels: Object.keys(alertData.reduce((acc, alert) => {\n          acc[alert.Tipo_avería || \"Desconocido\"] = (acc[alert.Tipo_avería || \"Desconocido\"] || 0) + 1;\n          return acc;\n        }, {})),\n        datasets: [\n          {\n            label: \"Tipos de Avería\",\n            data: Object.values(alertData.reduce((acc, alert) => {\n              acc[alert.Tipo_avería || \"Desconocido\"] = (acc[alert.Tipo_avería || \"Desconocido\"] || 0) + 1;\n              return acc;\n            }, {})),\n            backgroundColor: [\"#fe6b13\", \"#5da3ea\", \"#FFCE56\", \"#4CAF50\", \"#8E44AD\"],\n          },\n        ],\n      },\n      options: { responsive: true, plugins: { title: { display: true, text: \"Distribución de Tipos de Avería\" } } },\n    });\n\n    // 🔹 Gráfico de barras - Averías por mes\n    barChartRef.current.chart = new Chart(barChartRef.current.getContext(\"2d\"), {\n      type: \"bar\",\n      data: {\n        labels: labelsBar,\n        datasets: [\n          {\n            label: \"Averías por Mes\",\n            data: valuesBar,\n            backgroundColor: backgroundColors,\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: { beginAtZero: true },\n        },\n        plugins: {\n          legend: { position: \"top\" },\n          title: { display: true, text: \"Averías por Mes\" },\n        },\n      },\n    });\n\n    // 🔹 Gráfico de líneas - Histórico por máquina\n    lineChartRef.current.chart = new Chart(lineChartRef.current.getContext(\"2d\"), {\n      type: \"line\",\n      data: {\n        labels: Object.keys(alertData.reduce((acc, alert) => {\n          acc[alert.Máquina || \"Sin nombre\"] = (acc[alert.Máquina || \"Sin nombre\"] || []).concat(new Date(alert.Fecha_hora).toLocaleDateString());\n          return acc;\n        }, {})),\n        datasets: Object.keys(alertData.reduce((acc, alert) => {\n          acc[alert.Máquina || \"Sin nombre\"] = (acc[alert.Máquina || \"Sin nombre\"] || []).concat(new Date(alert.Fecha_hora).toLocaleDateString());\n          return acc;\n        }, {})).map(machine => ({\n          label: machine,\n          data: alertData.reduce((acc, alert) => {\n            acc[alert.Máquina || \"Sin nombre\"] = (acc[alert.Máquina || \"Sin nombre\"] || []).length;\n            return acc;\n          }, {})[machine],\n          borderColor: \"#032740\",\n          tension: 0.1,\n        })),\n      },\n      options: { responsive: true, plugins: { legend: { position: \"top\" }, title: { display: true, text: \"Histórico de Averías por Máquina\" } } },\n    });\n\n  }, [alertData, fullAlertData, filteredMonth]);\n\n  return (\n    <>\n      <div style={{ height: \"40px\" }}></div> {/* Espacio entre AlertTable y Graphs */}\n\n      <div className=\"graph-container\">\n        <h2 className=\"graph-title\">Estadísticas de Alertas</h2>\n        <div className=\"chart-wrapper\">\n          <div className=\"graph-card\"><canvas ref={pieChartRef}></canvas></div>\n          <div className=\"graph-card\"><canvas ref={barChartRef}></canvas></div>\n          <div className=\"graph-card full-width\"><canvas ref={lineChartRef}></canvas></div>\n        </div>\n      </div>\n    </>\n  );\n\n}\n\nexport default Graphs;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}